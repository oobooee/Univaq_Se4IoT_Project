# Global Agent Configuration
[agent]
  interval = "2s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "2s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = ""

[[outputs.influxdb_v2]]
  urls = ["http://${INFLUX_HOST}:8086"]
  token = "0z3KEVDdZ6Et-fI686-pOiEkFqOm2bDn3ovIxeLwqzHq1BvLsN1v_2yQfRy4Lag1kssi8qno28K4bd6OpiaeEQ=="
  organization = "my_se4iot_project"
  bucket = "my_se4iot_project_bucket"

[[inputs.mqtt_consumer]]
  servers = ["tcp://${MQTT_BROKER}:1883"]
  username = "mg"  
  password = "mg"  
  topics = ["${DAM_FOLDER}/${CLIENT_ID}/Summary"]  
  qos = 2
  client_id = "telegraf_mqtt_consumer_HA_${CLIENT_ID}"
  connection_timeout = "30s"
  data_format = "json"
  json_string_fields = ["SensorId"]
  name_override = "${DAM_FOLDER}/${CLIENT_ID}/HydroDamData"  
  fieldpass = [
    "SensorId", "Timestamp",
    "LakeDepth", "LakeVol", "Water_IN", "Water_OUT", "InstantPower", "TotalEnergy",
    "EnergyRequest", "LakeDepthMin", "LakeDepthMax", "LakeVolMin", "LakeVolMax",
    "Water_IN_Min", "Water_IN_Max", "Water_OUT_Min", "Water_OUT_Max",
    "InstantPowerMin", "InstantPowerMax", "EnergyRequestMin", "EnergyRequestMax"
  ]
  tagexclude = ["client_id", "topic", "host"]


[[inputs.amqp_consumer]]
  brokers = ["amqp://${RABBIT_HOST}:5672"]
  username = "mg"
  password = "mg"
  exchange = "${DAM_FOLDER}_Exchange"
  exchange_type = "direct"
  exchange_durability = "durable"
  queue = "${CLIENT_ID}_Turbin_data"
  queue_durability = "durable"
  binding_key = "${CLIENT_ID}_Turbin_key"
  prefetch_count = 100
  max_undelivered_messages = 5000
  auth_method = "PLAIN"
  data_format = "json"
  json_string_fields = ["SensorId"]
  name_override = "${DAM_FOLDER}/${CLIENT_ID}/TurbinStateData" 
  fieldpass = [
    "SensorId", "Timestamp",
    "EFFICIENCY", "Voltage", "Ampere", "Power"
  ]
  tagexclude = ["client_id", "topic", "host"]



[[inputs.internal]]
  collect_memstats = false
